---
title: "TD4_24-10"
author: "Lucile Dubarry"
format: 
  html:
    echo: false
    execute:  
      keep-md: true
---

```{r configuration}
#| message: false
here::i_am("r-101-grade-analysis.Rproj")
library(here)
library(tidyr)
library(dplyr)
library(vroom)
library(ggplot2)
library(knitr)
```

## Question 1 

```{r}
#| message: false
grades <- vroom(here("grades.csv"))
```

## Question 2

```{r}
variable_exam <- grades |>
  summarise(median = median(Exam, na.rm=TRUE), 
            mean = sprintf("%.2f",mean(Exam, na.rm=TRUE)), 
            minimum = min(Exam, na.rm=TRUE), 
            maximum = max(Exam, na.rm=TRUE))
kable(variable_exam)
```

## Question 3

```{r}
NA_count <- grades |> filter(is.na(Exam))
```
`r count(NA_count)|>pull(n)` students were missing at the final exam. 

## Question 4

```{r}
students_exam <- grades |> filter(!is.na(Exam))
ggplot(students_exam, aes(x = Exam)) +
  geom_bar() +
  labs(x = "Grades at the exam",
       y = "Total of students", 
       title = "Distribution of grades at the Exam")
```

## Question 5

```{r}
group_grades <- grades |> 
  group_by(Group)
kable(head(count(group_grades), n =10))
```

## Question 6

```{r}
grades |> mutate('Group'= gsub("grp_","",grades$Group)) |>
ggplot(aes(x=Group)) +
  geom_bar() +
    labs(title = "Number of Students in each Group",
       x = "Groups", 
       y = "Students")
```

## Question 7 
### 1st part (bar graph with facet)

```{r}
grades |> 
  filter(!is.na(Exam)) |>
ggplot(aes(x = Exam)) +
  geom_bar() +
  facet_wrap(~Group)
```
In this case, we consider the 'Exam' variable to be discrete. 

This solution enables us to know the distribution of the exam grade among each group. The facet_wrap allows to compare each group, but the graph is difficult to read. 

### 2nd part (boxplot)

```{r}
grades |> 
  mutate('Group'= gsub("grp_","",grades$Group)) |>
  filter(!is.na(Exam)) |> 
ggplot(aes(x = `Group`, y = `Exam`)) +
  geom_boxplot() +
  ylab("Exam grade") +
  xlab("Group")
```
This solution shows the distribution of the exam grade for each group. It may be the best representation, as it allows to easily compare the exam grade distribution for each group. 

### 3rd solution (density plot with facet)

```{r}
ggplot(sol1, aes(x = Exam)) +
  geom_density(alpha = 0.5) +
  xlab("Exam Grade") +
  ylab("Density") +
  facet_wrap(~Group)
```
This graph shows the density of the exam grade for each group. In this case, the variable 'Exam' is considered as a continuous one. It displays a graph easier to read. 

## Question 8

```{r}
NA_group <- group_grades |>
  summarise(missed_exam = sum(is.na(Exam)))
kable(head(NA_group, n = 10))
```


## Question 9

```{r}
NA_group |> 
  mutate('Group'= gsub("grp_","",NA_group$Group)) |> 
ggplot(aes(x = Group, y = missed_exam)) +
  geom_col() +
  labs(title = "Number of students missing the exam by Group",
       x = "Group",
       y = "Number of students")
```

## Question 10

```{r}
long_grades <- grades |>
  select(Id, Group, contains("MCQ"), Exam) |>
  pivot_longer(cols = c(Exam, contains("MCQ")), names_to = "name", values_to = "value")
```

## Question 11

```{r}
long_NA_count <- long_grades |>
  group_by(Id) |>
  summarise(missing_grades = sum(is.na(value)))
kable(head(long_NA_count, n = 10))
```

## Question 12

```{r}
ggplot(long_NA_count, aes(x = Id, y = missing_grades)) +
  geom_col() +
  labs(title = "Missing grades per student",
       x = "Students", 
       y = "Number of missing grades")
```

The graph displays the number of missing grades for each student. However, it doesn't represent the distribution of missing grades among students. The following graph is a representation of this distribution : 

```{r}
ggplot(long_NA_count, aes(x= missing_grades)) + 
  geom_bar() + 
  xlab("Missing grades") + 
  ylab("Students") + 
  ggtitle("Distribution of missing grades per student")
```


## Question 13

```{r}
long_NA_group <- long_grades |>
  group_by(Group) |>
  filter(name=="Exam") |>
  summarise(missed_exam = sum(is.na(value)))
kable(head(long_NA_group, n = 10))
```

## Question 14

```{r}
library(stringr)
```

```{r}
long_missing_online_test <- long_grades |>
  filter(str_starts(name, "Online")) |>  
  group_by(Id) |>
  summarise(missing_online_test = sum(is.na(value)))
kable(head(long_missing_online_test, n = 10))
```

## Question 15

```{r}
missing_online_test <- grades |> 
  select(Id, Exam, starts_with("Online")) |>
  rowwise() |>
  mutate(missed_online_test = sum(across(starts_with("Online"), is.na))) |>
  ungroup()
```

```{r}
missing_online_test |> 
  filter(!is.na(Exam)) |>
  ggplot(aes(x = Exam, y = missed_online_test)) +
  geom_bar(stat = "identity")+ 
  ggtitle("Distribution of the exam grade conditionned by the number of missing grades")
```

## Question 16

```{r}
missed_MCQ <- grades |>
  select(Id, starts_with("MCQ")) |>
  group_by(Id) |>
  summarise(missed = anyNA(across(starts_with("MCQ"))))
```

## Question 17

```{r}
P_group <- inner_join(missed_MCQ, grades, by=join_by(Id)) |>
  group_by(Group) |>
  summarise(P_missed = sum(missed=="TRUE")/n())
```

## Question 18

```{r}
P_exam <- inner_join(P_group, grades, by=join_by(Group)) |> 
  group_by(Group) |>
  mutate(mean_exam = mean(Exam, na.rm=TRUE))
ggplot(P_exam, aes(x = P_missed, y = mean_exam)) +
  geom_line() +
  geom_point() +
    labs(title = "Distribution of the average grade per group as a function of missed online test",
       x = "Pourcentage of missed online test", 
       y = "Average at the exam grade")
```

